{"version":3,"sources":["config/constants.js","config/api.js","store/reducers/auth.js","store/actionTypes.js","store/reducers/root.js","store/index.js","components/Layout/Header.js","components/Layout/Layout.js","Models/Textbox.js","components/Canvas/Textbox.js","components/Canvas/Grid.js","utils/index.js","components/Canvas/Canvas.js","components/Controls/GridControls.js","components/Controls/TextboxControls.js","components/Controls/TextboxControlList.js","components/Controls/Controls.js","components/Workspace.js","pages/IndexPage.js","router/index.js","App.js","serviceWorker.js","index.js"],"names":["COLORS","window","location","origin","White","Black","Green","Red","Blue","Yellow","Purple","setTokenHeader","token","axios","defaults","headers","common","initialState","localStorage","getItem","user","isLoggedIn","authReducer","state","action","type","setItem","removeItem","rootReducer","combineReducers","auth","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","Header","AppBar","Toolbar","Typography","variant","useStyles","makeStyles","theme","layout","marginTop","mixins","toolbar","breakpoints","up","minHeight","Layout","children","className","classes","Container","clsx","TYPES","TEXT","TIME","API","SCRIPT","Textbox","key","this","data","position","x","y","dimensions","width","height","typography","fontSize","color","textbox","padding","spacing","top","left","cursor","border","display","justifyContent","alignItems","imageDimensions","context","useContext","WorkspaceContext","useState","setPosition","useEffect","cellWidth","grid","columns","cellHeight","rows","Math","round","onDrag","event","pos","deltaX","deltaY","isEnabled","Badge","badgeContent","invisible","anchorOrigin","vertical","horizontal","style","transform","moment","format","toString","line","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","canvas","pointerEvents","touchAction","Grid","useRef","canvasRect","current","getBoundingClientRect","setDimensions","renderContext","getContext","strokeStyle","clientWidth","clientHeight","renderGrid","image","ref","importFile","accept","Promise","resolve","input","document","createElement","body","appendChild","onchange","e","file","target","files","click","remove","fileToImage","reader","FileReader","onload","result","readAsDataURL","overflow","userSelect","Canvas","imageRef","idCounter","handleImportImage","a","base64Image","set","model","handleAddTextbox","textboxes","addEventListener","removeEventListener","Paper","src","alt","draggable","map","React","TextboxElement","GridControls","handleChange","values","container","item","xs","FormControlLabel","control","Switch","checked","onChange","label","TextField","value","fullWidth","name","TextboxControls","reload","align","FormControl","InputLabel","Select","Object","MenuItem","entries","inputProps","step","parseInt","IconButton","onClick","newTextboxes","filter","divider","margin","TextboxControlList","i","Fragment","length","Divider","sectionTitle","marginBottom","Controls","dispatch","dispatchEvent","CustomEvent","Button","createContext","Workspace","useReducer","EventTarget","setContext","methods","Provider","index","IndexPage","Router","path","App","CssBaseline","Boolean","hostname","match","createMuiTheme","palette","ReactDOM","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f576ef7.chunk.js","sourcesContent":["export const API_BASE_URL = window.location.origin + \"/api\"\r\n\r\nexport const COLORS = {\r\n    White: \"white\",\r\n    Black: \"black\",\r\n    Green: \"#2ecc71\",\r\n    Red: \"#e74c3c\",\r\n    Blue: \"#3498db\",\r\n    Yellow: \"#f1c40f\",\r\n    Purple: \"#9b59b6\"\r\n}\r\n\r\nexport const FONT_FAMILIES = {\r\n    \"Impact\": \"'Impact', fantasy\",\r\n    \"Arial\": \"Arial\",\r\n    \"Comic Sans\": \"'Comic Sans', cursive\",\r\n    \"Courier\": \"'Courier', monospace\",\r\n    \"Times New Roman\": \"'Times New Roman', 'Times', serif\"\r\n}","import axios from \"axios\"\r\n\r\n// import format, {\r\n//     TYPE\r\n// } from \"./formatAPI.js\"\r\nimport { API_BASE_URL } from \"./constants.js\"\r\n\r\nexport function setTokenHeader(token) {\r\n    axios.defaults.headers.common = {\r\n        \"Authorization\": \"Baerer \" + token\r\n    }\r\n}\r\n\r\nfunction url(path) {\r\n    return API_BASE_URL + path\r\n}\r\n\r\nexport const login = (data) => axios.post(url(\"/auth/login\"), data)\r\nexport const register = (data) => axios.post(url(\"/auth/register\"), data)\r\nexport const getProfile = () => axios.get(url(\"/auth\"))","import { LOGIN, LOGOUT } from \"../actionTypes.js\"\r\nimport { setTokenHeader } from \"../../config/api.js\"\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    user: null,\r\n    isLoggedIn: false\r\n}\r\n\r\nsetTokenHeader(localStorage.getItem(\"token\"))\r\n\r\nfunction authReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case LOGIN:\r\n            localStorage.setItem(\"token\", action.token)\r\n            setTokenHeader(action.token)\r\n\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                user: action.user,\r\n                isLoggedIn: true\r\n            }\r\n        \r\n        case LOGOUT:\r\n            localStorage.removeItem(\"token\")\r\n            setTokenHeader(null)\r\n\r\n            return {\r\n                ...initialState,\r\n                token: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","export const LOGIN = \"LOGIN\"\r\nexport const LOGOUT = \"LOGOUT\"","import { combineReducers } from \"redux\"\r\n\r\nimport auth from \"./auth.js\"\r\n\r\nconst rootReducer = combineReducers({\r\n    auth\r\n})\r\n\r\nexport default rootReducer","import { createStore } from \"redux\"\r\n\r\nimport rootReducer from \"./reducers/root.js\"\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__?.()\r\n)\r\n\r\nexport default store","import React from \"react\"\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <AppBar>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\">Banner Generator</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\nimport clsx from \"clsx\"\r\nimport { Container } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport Header from \"./Header.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    layout: {\r\n        marginTop: theme.mixins.toolbar[theme.breakpoints.up(\"sm\")].minHeight\r\n    }\r\n}))\r\n\r\nfunction Layout({ children, className }) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Container className={clsx(classes.layout, className)}>\r\n            <Header/>\r\n\r\n            { children }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Layout","import { COLORS } from \"../config/constants.js\"\r\n\r\nexport const TYPES = {\r\n    TEXT: \"Text\",\r\n    TIME: \"Time\",\r\n    API: \"API\",\r\n    SCRIPT: \"Script\"\r\n}\r\n\r\nclass Textbox {\r\n    constructor(key) {\r\n        this.key = key\r\n        this.data = {\r\n            type: TYPES.TEXT,\r\n\r\n            data: \"Enter Text...\",\r\n\r\n            position: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n\r\n            dimensions: {\r\n                width: 100,\r\n                height: 50\r\n            },\r\n\r\n            typography: {\r\n                fontSize: 16,\r\n                color: COLORS[\"Black\"]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Textbox","import React, { useState, useContext, useEffect } from \"react\"\r\nimport moment from \"moment\"\r\nimport { DraggableCore } from \"react-draggable\"\r\nimport { Badge } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport { WorkspaceContext } from \"../Workspace.js\"\r\nimport { TYPES } from \"../../Models/Textbox\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textbox: {\r\n        padding: theme.spacing(1),\r\n        position: \"absolute\",\r\n        top: 0, left: 0,\r\n        cursor: \"move\",\r\n        border: \"1px solid\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}))\r\n\r\nfunction Textbox({ textbox, imageDimensions }) {\r\n    const context = useContext(WorkspaceContext)\r\n    \r\n    const classes = useStyles()\r\n\r\n    const [position, setPosition] = useState(textbox.data.position)\r\n\r\n    const handleDrag = (event, pos) => {\r\n        setPosition({\r\n            x: position.x + pos.deltaX,\r\n            y: position.y + pos.deltaY\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Snap to grid\r\n     */\r\n    useEffect(() => {\r\n        const cellWidth = imageDimensions.width / context.grid.columns\r\n        const cellHeight = imageDimensions.height / context.grid.rows\r\n\r\n        if (cellWidth && cellHeight) {\r\n            setPosition({\r\n                x: Math.round(position.x / cellWidth) * cellWidth,\r\n                y: Math.round(position.y / cellHeight) * cellHeight\r\n            })\r\n        }\r\n    }, [context.grid])\r\n\r\n    useEffect(() => {\r\n        textbox.data.position = position\r\n    }, [position])\r\n\r\n    const grid = [\r\n        imageDimensions.width / context.grid.columns,\r\n        imageDimensions.height / context.grid.rows\r\n    ]\r\n\r\n    return (\r\n        <DraggableCore\r\n            onDrag={handleDrag}\r\n            grid={context.grid.isEnabled ? grid : null}\r\n        >\r\n            <Badge\r\n                className={classes.textbox}\r\n                badgeContent={textbox.key}\r\n                color=\"primary\"\r\n                invisible={false}\r\n                anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                style={{\r\n                    transform: `translate(${position.x}px, ${position.y}px)`,\r\n                    ...textbox.data.dimensions,\r\n                    ...textbox.data.typography\r\n                }}\r\n            >\r\n                { textbox.data.type === TYPES.TEXT ? (\r\n                    textbox.data.data\r\n                ) : textbox.data.type === TYPES.TIME ? (\r\n                    moment().format(\"HH:mm\").toString()\r\n                ) : null }\r\n            </Badge>\r\n        </DraggableCore>\r\n    )\r\n}\r\n\r\nexport default Textbox","import React, { useEffect, useRef, useContext } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\n\r\nimport { WorkspaceContext } from \"../Workspace.js\"\r\n\r\nfunction line(context, x1, y1, x2, y2) {\r\n    context.beginPath()\r\n    context.moveTo(x1, y1)\r\n    context.lineTo(x2, y2)\r\n    context.stroke()\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    canvas: {\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        touchAction: \"none\",\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n}))\r\n\r\nfunction Grid() {\r\n    const classes = useStyles()\r\n\r\n    const context = useContext(WorkspaceContext)\r\n\r\n    const canvas = useRef()\r\n\r\n    const setDimensions = () => {\r\n        const canvasRect = canvas.current.getBoundingClientRect()\r\n\r\n        canvas.current.width = canvasRect.width\r\n        canvas.current.height = canvasRect.height\r\n    }\r\n\r\n    const renderGrid = () => {\r\n        const renderContext = canvas.current.getContext(\"2d\")\r\n\r\n        renderContext.strokeStyle = \"#000000\"\r\n\r\n        // Calculate cell size\r\n        const cellWidth = canvas.current.clientWidth / context.grid.columns\r\n        const cellHeight = canvas.current.clientHeight / context.grid.rows\r\n\r\n        // Render vertical lines\r\n        for (let x = 0; x < canvas.current.width; x += cellWidth) {\r\n            line(renderContext, x, 0, x, canvas.current.height)\r\n        }\r\n\r\n        // Render horizontal lines\r\n        for (let y = 0; y < canvas.current.height; y += cellHeight) {\r\n            line(renderContext, 0, y, canvas.current.width, y)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDimensions()\r\n        renderGrid()\r\n    }, [context.image, context.grid])\r\n\r\n    return (\r\n        <canvas\r\n            ref={canvas}\r\n            className={classes.canvas}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Grid","export const importFile = accept => new Promise(resolve => {\r\n    const input = document.createElement(\"input\")\r\n    input.type = \"file\"\r\n    input.accept = accept\r\n    document.body.appendChild(input)\r\n\r\n    input.onchange = e => {\r\n        const file = e.target.files[0]\r\n        resolve(file)\r\n    }\r\n\r\n    input.click()\r\n    input.remove()\r\n})\r\n\r\nexport const fileToImage = file => new Promise(resolve => {\r\n    const reader = new FileReader()\r\n\r\n    reader.onload = () => resolve(reader.result)\r\n\r\n    reader.readAsDataURL(file)\r\n})","import React, { useContext, useEffect, useRef } from \"react\"\r\nimport { Paper } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport { WorkspaceContext } from \"../Workspace.js\"\r\nimport TextboxElement from \"./Textbox.js\"\r\nimport Grid from \"./Grid.js\"\r\nimport { importFile, fileToImage } from \"../../utils\"\r\nimport Textbox from \"../../Models/Textbox.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    canvas: {\r\n        minHeight: 250,\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n        userSelect: \"none\"\r\n    },\r\n\r\n    image: {\r\n        width: \"100%\"\r\n    }\r\n}))\r\n\r\nfunction Canvas() {\r\n    const context = useContext(WorkspaceContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const imageRef = useRef()\r\n    const idCounter = useRef(0)\r\n\r\n    const handleImportImage = async () => {\r\n        const file = await importFile(\"image/*\")\r\n        const base64Image = await fileToImage(file)\r\n\r\n        context.set({\r\n            model: {\r\n                ...context.model,\r\n                image: base64Image\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleAddTextbox = () => {\r\n        context.set({\r\n            model: {\r\n                ...context.model,\r\n                textboxes: [\r\n                    ...context.model.textboxes,\r\n                    new Textbox(idCounter.current++)\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        context.event.addEventListener(\"importImage\", handleImportImage)\r\n        context.event.addEventListener(\"addTextbox\", handleAddTextbox)\r\n        \r\n        return () => {\r\n            context.event.removeEventListener(\"importImage\", handleImportImage)\r\n            context.event.removeEventListener(\"addTextbox\", handleAddTextbox)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Paper className={classes.canvas}>\r\n            { context.model.image && (\r\n                <>\r\n                    { context.grid.isEnabled && <Grid /> }\r\n\r\n                    <img\r\n                        src={context.model.image}\r\n                        alt=\"\"\r\n                        className={classes.image}\r\n                        ref={imageRef}\r\n                        draggable=\"false\"\r\n                    />\r\n                </>\r\n            ) }\r\n\r\n            { context.model.textboxes.map(textbox => (\r\n                React.createElement(TextboxElement, {\r\n                    textbox,\r\n                    key: textbox.key,\r\n                    imageDimensions: {\r\n                        width: imageRef.current.clientWidth,\r\n                        height: imageRef.current.clientHeight\r\n                    }\r\n                })\r\n            )) }\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Canvas","import React, { useContext } from \"react\"\r\nimport { Grid, TextField, Switch, FormControlLabel } from \"@material-ui/core\"\r\n\r\nimport { WorkspaceContext } from \"../Workspace.js\"\r\n\r\nfunction GridControls() {\r\n    const context = useContext(WorkspaceContext)\r\n\r\n    const handleChange = (values) => {\r\n        context.set({\r\n            grid: {\r\n                ...context.grid,\r\n                ...values\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={context.grid.isEnabled}\r\n                            onChange={event => handleChange({ isEnabled: event.target.checked })}\r\n                        />\r\n                    }\r\n                    label=\"Enabled\"\r\n                />\r\n            </Grid>\r\n            \r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    value={context.grid.columns}\r\n                    onChange={event => handleChange({ columns: event.target.value })}\r\n                    label=\"Columns\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    value={context.grid.rows}\r\n                    onChange={event => handleChange({ rows: event.target.value })}\r\n                    name=\"rows\"\r\n                    label=\"Rows\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default GridControls","import React, { useContext } from \"react\"\r\nimport { Grid, TextField, Typography, Select, MenuItem, FormControl, InputLabel, IconButton } from \"@material-ui/core\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\n\r\nimport { WorkspaceContext } from \"../Workspace.js\"\r\nimport { TYPES } from \"../../Models/Textbox.js\"\r\nimport { COLORS } from \"../../config/constants.js\"\r\n\r\nfunction TextboxControls({ textbox }) {\r\n    const { data, key } = textbox\r\n    \r\n    const context = useContext(WorkspaceContext)\r\n\r\n    const handleChange = (values) => {\r\n        textbox.data = {\r\n            ...data,\r\n            ...values\r\n        }\r\n\r\n        context.reload()\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        const newTextboxes = context.model.textboxes.filter(({ key }) => textbox.key !== key)\r\n\r\n        context.set({\r\n            model: {\r\n                ...context.model,\r\n                textboxes: newTextboxes\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={1}>\r\n                <Typography variant=\"h5\" align=\"center\">{ key }</Typography>\r\n            </Grid>\r\n\r\n            <Grid item container xs={11} spacing={2}>\r\n                <Grid item xs={3}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel>Type</InputLabel>\r\n\r\n                        <Select\r\n                            value={data.type}\r\n                            onChange={event => handleChange({\r\n                                ...data,\r\n                                type: event.target.value\r\n                            })}\r\n                        >\r\n                            {Object.values(TYPES).map(type => (\r\n                                <MenuItem value={type} key={type}>{type}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={2}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel>Color</InputLabel>\r\n\r\n                        <Select\r\n                            value={data.typography.color}\r\n                            onChange={event => handleChange({\r\n                                ...data,\r\n                                typography: {\r\n                                    ...data.typography,\r\n                                    color: event.target.value\r\n                                }\r\n                            })}\r\n                        >\r\n                            {Object.entries(COLORS).map(([key, value]) => (\r\n                                <MenuItem value={value} key={key}>{key}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={2}>\r\n                    <TextField\r\n                        label=\"Width\"\r\n                        type=\"number\"\r\n                        inputProps={{ step: 10 }}\r\n                        value={data.dimensions.width}\r\n                        onChange={event => {\r\n                            handleChange({\r\n                                ...data,\r\n                                dimensions: {\r\n                                    ...data.dimensions,\r\n                                    width: parseInt(event.target.value)\r\n                                }\r\n                            })\r\n                        }}\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={2}>\r\n                    <TextField\r\n                        label=\"Height\"\r\n                        type=\"number\"\r\n                        inputProps={{ step: 10 }}\r\n                        value={data.dimensions.height}\r\n                        onChange={event => {\r\n                            handleChange({\r\n                                ...data,\r\n                                dimensions: {\r\n                                    ...data.dimensions,\r\n                                    height: parseInt(event.target.value)\r\n                                }\r\n                            })\r\n                        }}\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={2}>\r\n                    <TextField\r\n                        label=\"Font Size\"\r\n                        type=\"number\"\r\n                        value={data.typography.fontSize}\r\n                        onChange={event => {\r\n                            handleChange({\r\n                                ...data,\r\n                                typography: {\r\n                                    ...data.typography,\r\n                                    fontSize: parseInt(event.target.value)\r\n                                }\r\n                            })\r\n                        }}\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={1}>\r\n                    <IconButton onClick={handleDelete}>\r\n                        <DeleteIcon/>\r\n                    </IconButton>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    {data.type === TYPES.TEXT ? (\r\n                        <TextField\r\n                            label=\"Text\"\r\n                            value={data.data}\r\n                            onChange={event => handleChange({\r\n                                ...data,\r\n                                data: event.target.value\r\n                            })}\r\n                            fullWidth\r\n                        />\r\n                    ) : null}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TextboxControls","import React, { useContext } from \"react\"\r\nimport { Divider } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport { WorkspaceContext } from \"../Workspace.js\"\r\nimport TextboxControls from \"./TextboxControls\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    divider: {\r\n        margin: `${theme.spacing(2)}px 0`\r\n    }\r\n}))\r\n\r\nfunction TextboxControlList() {\r\n    const context = useContext(WorkspaceContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    return context.model.textboxes.map((textbox, i) => (\r\n        <React.Fragment key={textbox.key}>\r\n            <TextboxControls textbox={textbox}/>\r\n\r\n            { i !== context.model.textboxes.length - 1 && (\r\n                <Divider className={classes.divider}/>\r\n            ) }\r\n        </React.Fragment>\r\n    ))\r\n}\r\n\r\nexport default TextboxControlList","import React, { useContext } from \"react\"\r\nimport { Button, Grid, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport { WorkspaceContext } from \"../Workspace.js\"\r\nimport GridControls from \"./GridControls.js\"\r\nimport TextboxControlList from \"./TextboxControlList.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sectionTitle: {\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nfunction Controls() {\r\n    const context = useContext(WorkspaceContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const dispatch = (type) => () => context.event.dispatchEvent(new CustomEvent(type))\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={dispatch(\"importImage\")}>\r\n                    { !context.model.image ? \"Import\" : \"Change\" } Image\r\n                </Button>\r\n            </Grid>\r\n\r\n            { context.model.image && (\r\n                <>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={dispatch(\"addTextbox\")}>Add Textbox</Button>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" className={classes.sectionTitle}>Grid</Typography>\r\n                        <GridControls />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" className={classes.sectionTitle}>Textboxes</Typography>\r\n                        <TextboxControlList />\r\n                    </Grid>\r\n                </>\r\n            ) }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Controls","import React, { useState, useReducer } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Grid } from \"@material-ui/core\"\r\n\r\nimport Canvas from \"./Canvas/Canvas.js\"\r\nimport Controls from \"./Controls/Controls.js\"\r\n\r\nconst WorkspaceContext = React.createContext()\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n}))\r\n\r\nfunction Workspace() {\r\n    const classes = useStyles()\r\n\r\n    const [reloadKey, reload] = useReducer(key => key + 1, 0)\r\n    \r\n    const [context, setContext] = useState({\r\n        event: new EventTarget(),\r\n        model: {\r\n            image: null,\r\n            textboxes: []\r\n        },\r\n        grid: {\r\n            isEnabled: true,\r\n            rows: 16,\r\n            columns: 16\r\n        }\r\n    })\r\n\r\n    const methods = {\r\n        set: values => setContext({ ...context, ...values }),\r\n        reload\r\n    }\r\n\r\n    window.context = context\r\n\r\n    return (\r\n        <WorkspaceContext.Provider value={{ ...context, ...methods }}>\r\n            <Grid container spacing={8}>\r\n                <Grid item xs>\r\n                    <Canvas />\r\n                </Grid>\r\n\r\n                <Grid item xs>\r\n                    <Controls />\r\n                </Grid>\r\n            </Grid>\r\n        </WorkspaceContext.Provider>\r\n    )\r\n}\r\n\r\nexport { WorkspaceContext }\r\n\r\nexport default Workspace","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport Layout from \"../components/Layout/Layout.js\"\r\nimport Workspace from \"../components/Workspace.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    index: {\r\n        marginTop: 200\r\n    }\r\n}))\r\n\r\nfunction IndexPage() {\r\n    const classes = useStyles()\r\n    \r\n    return (\r\n        <Layout className={classes.index}>\r\n            <Workspace/>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default IndexPage","import React from \"react\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\n\r\nimport IndexPage from \"../pages/IndexPage.js\"\r\n\r\nfunction Router() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\">\r\n                    <IndexPage/>\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router","import React from \"react\"\r\nimport { CssBaseline } from \"@material-ui/core\"\r\n\r\nimport Router from \"./router/index.js\"\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <CssBaseline/>\r\n\r\n            <Router/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\"\r\n\r\nimport store from \"./store\"\r\nimport App from \"./App.js\"\r\nimport * as serviceWorker from \"./serviceWorker.js\"\r\nimport \"./index.css\"\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        // theme: \"dark\",\r\n        // type: \"dark\",\r\n\r\n        // background: {\r\n        //     default: \"#282833\",\r\n        //     paper: \"#333340\"\r\n        // },\r\n\r\n        // primary: {\r\n        //     main: \"#BB86FC\",\r\n        //     variant: \"#3700B3\"\r\n        // },\r\n\r\n        // secondary: {\r\n        //     main: \"#03DAC5\",\r\n        //     dark: \"#336D6F\"\r\n        // },\r\n\r\n        // error: {\r\n        //     main: \"#CF6679\"\r\n        // }\r\n    }\r\n})\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    console.log(theme)\r\n}\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n            <App />\r\n        </ThemeProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}